version: '3.8'


services:

  # Spring app
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hc_app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}
      SPRING_REDIS_HOST: ${SPRING_REDIS_HOST}
    depends_on:
      - kafka
      - postgres
      - redis

  # Data Base SQl
  postgres:
    image: postgres:15
    container_name: hc_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  # Redis
  redis:
    image: redis:7
    container_name: hc_redis
    ports:
      - "6379:6379"

  # Zookeeper
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: hc_zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: ${ALLOW_ANONYMOUS_LOGIN}

  # Apache Kafka
  kafka:
    image: bitnami/kafka:latest
    container_name: hc_kafka
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID}
      KAFKA_CFG_ZOOKEEPER_CONNECT: ${KAFKA_CFG_ZOOKEEPER_CONNECT}
      KAFKA_CFG_LISTENERS: ${KAFKA_CFG_LISTENERS}
      KAFKA_CFG_ADVERTISED_LISTENERS: ${KAFKA_CFG_ADVERTISED_LISTENERS}
      ALLOW_PLAINTEXT_LISTENER: ${ALLOW_PLAINTEXT_LISTENER}
    depends_on:
      - zookeeper

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: hc_kafka-ui
    restart: always
    ports:
      - "8085:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_CLUSTERS_0_NAME}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS}
    depends_on:
      - kafka