plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.9'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.combs.micro'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.5")
}

dependencies {
	//Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	//DATA
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Cache - Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	//implementation 'org.springframework.kafka:spring-kafka:3.4.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'
	implementation 'io.swagger:swagger-annotations:1.6.14'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-amqp'


	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'
	
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.testcontainers:testcontainers:1.19.0'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
	testImplementation 'org.testcontainers:postgresql:1.19.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
